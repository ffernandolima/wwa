// Copyright 2017 (c) [Denis Da Silva]. All rights reserved.
// See License.txt in the project root for license information.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Prolix.Data
{
    /// <summary>
    /// Represents a generic set of database entities.
    /// </summary>
    /// <typeparam name="T">The entity model type</typeparam>
    public interface IEntitySet<T> : IOrderedQueryable<T>
        where T : class
    {
        /// <summary>
        /// Adds a new record to the set
        /// </summary>
        /// <param name="model">The entity model</param>
        /// <returns>The added model with autogenerated ata (e.g. Id)</returns>
        T Add(T model);

        /// <summary>
        /// Removes a record to the set
        /// </summary>
        /// <param name="model">The entity model</param>
        void Remove(T model);

        /// <summary>
        /// Updates a existing record in the set
        /// </summary>
        /// <param name="source">The entity model which contains the new data</param>
        /// <param name="target">The model which will be updated in the set</param>
        void Update(T source, T target);

        /// <summary>
        /// Verify if a entity model is exists in the database
        /// </summary>
        /// <param name="model">The entity model</param>
        /// <returns>TRUE is the entity model is saved. Otherwise FALSE.</returns>
        bool IsSaved(T model);
    }
}
